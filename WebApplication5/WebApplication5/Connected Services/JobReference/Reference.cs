//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication5.JobReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Job", Namespace="http://schemas.datacontract.org/2004/07/WcfJobPortal")]
    [System.SerializableAttribute()]
    public partial class Job : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VacancyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((this.SalaryField.Equals(value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Vacancy {
            get {
                return this.VacancyField;
            }
            set {
                if ((this.VacancyField.Equals(value) != true)) {
                    this.VacancyField = value;
                    this.RaisePropertyChanged("Vacancy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobReference.IJobService")]
    public interface IJobService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/GetJobs", ReplyAction="http://tempuri.org/IJobService/GetJobsResponse")]
        System.Data.DataSet GetJobs(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/GetJobs", ReplyAction="http://tempuri.org/IJobService/GetJobsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetJobsAsync(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/GetJobsofCompany", ReplyAction="http://tempuri.org/IJobService/GetJobsofCompanyResponse")]
        System.Data.DataSet GetJobsofCompany(int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/GetJobsofCompany", ReplyAction="http://tempuri.org/IJobService/GetJobsofCompanyResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetJobsofCompanyAsync(int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/GetAllJobs", ReplyAction="http://tempuri.org/IJobService/GetAllJobsResponse")]
        System.Data.DataSet GetAllJobs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/GetAllJobs", ReplyAction="http://tempuri.org/IJobService/GetAllJobsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllJobsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/AddJob", ReplyAction="http://tempuri.org/IJobService/AddJobResponse")]
        int AddJob(WebApplication5.JobReference.Job j);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/AddJob", ReplyAction="http://tempuri.org/IJobService/AddJobResponse")]
        System.Threading.Tasks.Task<int> AddJobAsync(WebApplication5.JobReference.Job j);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/UpdateJob", ReplyAction="http://tempuri.org/IJobService/UpdateJobResponse")]
        int UpdateJob(WebApplication5.JobReference.Job j);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/UpdateJob", ReplyAction="http://tempuri.org/IJobService/UpdateJobResponse")]
        System.Threading.Tasks.Task<int> UpdateJobAsync(WebApplication5.JobReference.Job j);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/DeleteJob", ReplyAction="http://tempuri.org/IJobService/DeleteJobResponse")]
        int DeleteJob(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/DeleteJob", ReplyAction="http://tempuri.org/IJobService/DeleteJobResponse")]
        System.Threading.Tasks.Task<int> DeleteJobAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/AddJobCategory", ReplyAction="http://tempuri.org/IJobService/AddJobCategoryResponse")]
        int AddJobCategory(string jobCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/AddJobCategory", ReplyAction="http://tempuri.org/IJobService/AddJobCategoryResponse")]
        System.Threading.Tasks.Task<int> AddJobCategoryAsync(string jobCategory);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobServiceChannel : WebApplication5.JobReference.IJobService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobServiceClient : System.ServiceModel.ClientBase<WebApplication5.JobReference.IJobService>, WebApplication5.JobReference.IJobService {
        
        public JobServiceClient() {
        }
        
        public JobServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JobServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetJobs(int categoryId) {
            return base.Channel.GetJobs(categoryId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetJobsAsync(int categoryId) {
            return base.Channel.GetJobsAsync(categoryId);
        }
        
        public System.Data.DataSet GetJobsofCompany(int companyId) {
            return base.Channel.GetJobsofCompany(companyId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetJobsofCompanyAsync(int companyId) {
            return base.Channel.GetJobsofCompanyAsync(companyId);
        }
        
        public System.Data.DataSet GetAllJobs() {
            return base.Channel.GetAllJobs();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllJobsAsync() {
            return base.Channel.GetAllJobsAsync();
        }
        
        public int AddJob(WebApplication5.JobReference.Job j) {
            return base.Channel.AddJob(j);
        }
        
        public System.Threading.Tasks.Task<int> AddJobAsync(WebApplication5.JobReference.Job j) {
            return base.Channel.AddJobAsync(j);
        }
        
        public int UpdateJob(WebApplication5.JobReference.Job j) {
            return base.Channel.UpdateJob(j);
        }
        
        public System.Threading.Tasks.Task<int> UpdateJobAsync(WebApplication5.JobReference.Job j) {
            return base.Channel.UpdateJobAsync(j);
        }
        
        public int DeleteJob(int id) {
            return base.Channel.DeleteJob(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteJobAsync(int id) {
            return base.Channel.DeleteJobAsync(id);
        }
        
        public int AddJobCategory(string jobCategory) {
            return base.Channel.AddJobCategory(jobCategory);
        }
        
        public System.Threading.Tasks.Task<int> AddJobCategoryAsync(string jobCategory) {
            return base.Channel.AddJobCategoryAsync(jobCategory);
        }
    }
}
